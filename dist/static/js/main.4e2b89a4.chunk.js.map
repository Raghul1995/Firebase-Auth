{"version":3,"sources":["components/Auth/SignIn.js","store/action/authAction.js","components/Auth/SignUp.js","components/Projects/ProjSummary.js","components/Projects/Projlist.js","components/Dash/Notifications.js","components/Dash/Dashboard.js","components/Layouts/SignedIn.js","components/Layouts/SignedOut.js","components/Layouts/Navbar.js","components/Projects/Createproj.js","store/action/projAction.js","components/Projects/ProjDetails.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignIn","state","email","password","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","signIn","this","authError","auth","uid","to","className","onSubmit","htmlFor","type","onChange","Component","connect","firebase","dispatch","Credent","credentials","getState","getFirebase","signInWithEmailAndPassword","then","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","fire","firestore","createUserWithEmailAndPassword","response","collection","doc","user","set","initials","ProjSummary","project","title","authorFirstName","authorLastName","createdAt","toDate","toDateString","Projlist","projRedData","map","projecty","key","Notifications","notifications","item","content","moment","time","fromNow","Dashboard","projects","compose","ordered","proj","firestoreConnect","orderBy","limit","signOut","console","log","onClick","profile","SignedOut","links","CreateProj","Title","Content","creatingProject","history","push","authorId","add","authorID","Date","createProj","ownProps","match","params","data","Project","App","exact","path","component","ProjDetails","Boolean","window","location","hostname","initState","authReducers","action","message","elements","projReducer","error","rootReducer","combineReducers","authReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qRAKaA,EAAb,4MACCC,MAAQ,CACPC,MAAO,GACPC,SAAU,IAHZ,EAMCC,aAAe,SAACC,GACf,EAAKC,SAAL,eACED,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SAR3B,EAYCC,aAAe,SAACL,GACfA,EAAEM,iBAEF,EAAKC,MAAMC,OAAO,EAAKZ,QAfzB,uDAiBW,IAAD,EACkBa,KAAKF,MAAxBG,EADC,EACDA,UACL,OAFM,EACUC,KACRC,IAAY,kBAAC,IAAD,CAAUC,GAAG,MAGlC,yBAAKC,UAAU,aACd,0BAAMC,SAAUN,KAAKJ,aAAcS,UAAU,SAC5C,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,eACd,2BAAOE,QAAQ,SAAf,SACA,2BAAOC,KAAK,QAAQd,GAAG,QAAQe,SAAUT,KAAKV,gBAE/C,yBAAKe,UAAU,eACd,2BAAOE,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWd,GAAG,WAAWe,SAAUT,KAAKV,gBAErD,yBAAKe,UAAU,eACd,4BAAQA,UAAU,gCAAlB,SACN,yBAAKA,UAAU,mBACZJ,EAAY,2BAAIA,GAAiB,aApCpC,GAA4BS,aAyDbC,eAbO,SAACxB,GACtB,MAAM,CACLc,UAAUd,EAAMe,KAAKD,UACrBC,KAAMf,EAAMyB,SAASV,SAIE,SAACW,GACzB,MAAM,CACLd,OAAQ,SAACe,GAAD,OAAaD,GC1DAE,ED0DgBD,ECzD/B,SAACD,EAAUG,EAAX,IACOC,EADkC,EAAlBA,eAI3Bf,OACAgB,2BAA2BH,EAAY3B,MAAO2B,EAAY1B,UAC1D8B,MAAK,WACLN,EAAS,CAAEL,KAAM,oBAEjBY,OAAM,SAACC,GACPR,EAAS,CAAEL,KAAM,eAAgBa,cAXf,IAACN,MD8DRJ,CAA4CzB,GEzD9CoC,EAAb,4MACCnC,MAAQ,CACPC,MAAO,GACPC,SAAU,GACVkC,UAAW,GACXC,SAAU,IALZ,EAQClC,aAAe,SAACC,GACf,EAAKC,SAAL,eACED,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SAV3B,EAcCC,aAAe,SAACL,GACfA,EAAEM,iBACF,EAAKC,MAAM2B,OAAO,EAAKtC,QAhBzB,uDAmBW,IAAD,EACoBa,KAAKF,MAAzBI,EADA,EACAA,KAAMD,EADN,EACMA,UACd,OAAIC,EAAKC,IAAY,kBAAC,IAAD,CAAUC,GAAG,MAGjC,yBAAKC,UAAU,aACd,0BAAMC,SAAUN,KAAKJ,aAAcS,UAAU,SAC5C,wBAAIA,UAAU,2BAAd,WAEA,yBAAKA,UAAU,eACd,2BAAOE,QAAQ,SAAf,SACA,2BAAOC,KAAK,QAAQd,GAAG,QAAQe,SAAUT,KAAKV,gBAE/C,yBAAKe,UAAU,eACd,2BAAOE,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWd,GAAG,WAAWe,SAAUT,KAAKV,gBAErD,yBAAKe,UAAU,eACd,2BAAOE,QAAQ,aAAf,cACA,2BAAOC,KAAK,OAAOd,GAAG,YAAYe,SAAUT,KAAKV,gBAElD,yBAAKe,UAAU,eACd,2BAAOE,QAAQ,YAAf,aACA,2BAAOC,KAAK,OAAOd,GAAG,WAAWe,SAAUT,KAAKV,gBAEjD,yBAAKe,UAAU,eACd,4BAAQA,UAAU,gCAAlB,WACA,yBAAKA,UAAU,mBAAmBJ,EAAY,+BAAKA,GAAiB,aA9C1E,GAA4BS,aAgEbC,eAXS,SAACxB,GACxB,MAAO,CACNe,KAAMf,EAAMyB,SAASV,KACrBD,UAAWd,EAAMe,KAAKD,cAGG,SAACY,GAC3B,MAAO,CACNY,OAAQ,SAACC,GAAD,OAAab,ED3CD,SAACa,GACtB,OAAO,SAACb,EAAUG,EAAX,GAAwD,IAAjCC,EAAgC,EAAhCA,YAAaU,EAAmB,EAAnBA,aACpCC,EAAOX,IACPY,EAAYF,IAClBC,EACE1B,OACA4B,+BAA+BJ,EAAQtC,MAAOsC,EAAQrC,UACtD8B,MAAK,SAACY,GACN,OAAOF,EACLG,WAAW,SACXC,IAAIF,EAASG,KAAK/B,KAClBgC,IAAI,CACJZ,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClBY,SAAUV,EAAQH,UAAU,GAAKG,EAAQF,SAAS,QAGpDL,MAAK,WACLN,EAAS,CAAEL,KAAM,sBAEjBY,OAAM,SAACC,GACPR,EAAS,CAAEL,KAAM,gBAAiBa,YCsBNI,CAAOC,QAGxBf,CAA6CW,GCxD7Ce,MAZf,YAAiC,IAAXC,EAAU,EAAVA,QACrB,OACC,yBAAKjC,UAAU,kCACd,yBAAKA,UAAU,wCACd,0BAAMA,UAAU,cAAciC,EAAQC,OACzC,yCAAeD,EAAQE,gBAAvB,IAAyCF,EAAQG,gBAC9C,uBAAGpC,UAAU,aAAaiC,EAAQI,UAAUC,SAASC,mBCW1CC,MAbf,YAAoC,IAAhBC,EAAe,EAAfA,YACnB,OACC,yBAAKzC,UAAU,wBACbyC,GACAA,EAAYC,KAAI,SAACC,GAChB,OAAO,kBAAC,IAAD,CAAM5C,GAAI,YAAa4C,EAAStD,GAAIuD,IAAKD,EAAStD,IACzD,kBAAC,EAAD,CAAa4C,QAASU,U,kBCkBZE,MA3Bf,SAAuBpD,GAAQ,IACtBqD,EAAkBrD,EAAlBqD,cACR,OACC,yBAAK9C,UAAU,WACd,yBAAKA,UAAU,kBACd,yBAAKA,UAAU,gBACd,0BAAMA,UAAU,cAAhB,iBACA,4BACE8C,GACAA,EAAcJ,KAAI,SAACK,GAClB,OACC,wBAAIH,IAAKG,EAAK1D,IACb,0BAAMW,UAAU,aAAa+C,EAAKlB,KAAlC,KACA,8BAAOkB,EAAKC,SACZ,yBAAKhD,UAAU,uBACbiD,IAAOF,EAAKG,KAAKZ,UAAUa,oB,gBCR1BC,EAAb,uKACa,MAG2BzD,KAAKF,MAAtC4D,EAHM,EAGNA,SAAUxD,EAHJ,EAGIA,KAAMiD,EAHV,EAGUA,cACvB,OAAIjD,EAAKC,IAEG,yBAAKE,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAUyC,YAAaY,KAE3B,yBAAKrD,UAAU,wBACX,kBAAC,EAAD,CAAgB8C,cAAgBA,OARnC,kBAAC,IAAD,CAAU/C,GAAG,gBALlC,GAA+BM,aAiChBiD,cAAQhD,aATG,SAACxB,GAEnB,MAAM,CACNuE,SAAUvE,EAAM0C,UAAU+B,QAAQC,KAC/B3D,KAAMf,EAAMyB,SAASV,KACpBiD,cAAehE,EAAM0C,UAAU+B,QAAQT,kBAKnDW,2BAAiB,CACb,CAAC9B,WAAY,OAAQ+B,QAAS,CAAC,YAAa,SAC5C,CAAC/B,WAAY,gBAAiBgC,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAH/CJ,CAIXF,GCvBJ,IAMe9C,cAAQ,MANI,SAACE,GAC3B,MAAO,CACNoD,QAAS,kBAAMpD,GNTT,SAACA,EAAUG,EAAX,IACOC,EADkC,EAAlBA,eAExBf,OAAO+D,UAAU9C,MAAK,WAC1BN,EAAS,CAAEL,KAAM,8BMULG,EAxBf,SAAkBb,GAEjB,OADAoE,QAAQC,IAAIrE,GAEX,wBAAIO,UAAU,SACb,4BACC,kBAAC,IAAD,CAASD,GAAG,eAAZ,gBAED,4BACC,uBAAGgE,QAAStE,EAAMmE,SAAlB,YAED,4BACC,kBAAC,IAAD,CAAS7D,GAAG,IAAIC,UAAU,mCACzBP,EAAMuE,QAAQjC,eCFJkC,MAbf,WACI,OACI,6BACI,wBAAIjE,UAAU,SACV,4BAAI,kBAAC,IAAD,CAASD,GAAG,WAAZ,YACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,WAAZ,aCepB,IAQeO,eARQ,SAACxB,GAEvB,MAAM,CACLe,KAAMf,EAAMyB,SAASV,KACrBmE,QAASlF,EAAMyB,SAASyD,WAIX1D,EAvBf,SAAgBb,GAAQ,IAChBI,EAAiBJ,EAAjBI,KAAMmE,EAAWvE,EAAXuE,QAEPE,EAAQrE,EAAKC,IAAO,kBAAC,EAAD,CAAUkE,QAASA,IAAa,kBAAC,EAAD,MAC1D,OACC,yBAAKhE,UAAU,6BACd,yBAAKA,UAAU,aACd,kBAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,mBAAvB,QAEKkE,O,QCXIC,EAAb,4MACCrF,MAAQ,CACPsF,MAAO,GACPC,QAAS,IAHX,EAMCpF,aAAe,SAACC,GACf,EAAKC,SAAL,eACED,EAAEE,OAAOC,GAAKH,EAAEE,OAAOE,SAR3B,EAYCC,aAAe,SAACL,GACfA,EAAEM,iBAEF,EAAKC,MAAM6E,gBAAgB,EAAKxF,OAChC,EAAKW,MAAM8E,QAAQC,KAAK,MAhB1B,uDAoBE,OADe7E,KAAKF,MAAbI,KACEC,IAGR,yBAAKE,UAAU,aACd,0BAAMC,SAAUN,KAAKJ,aAAcS,UAAU,SAC5C,wBAAIA,UAAU,2BAAd,kBACA,yBAAKA,UAAU,eACd,2BAAOE,QAAQ,SAAf,SACA,2BAAOC,KAAK,OAAOd,GAAG,QAAQe,SAAUT,KAAKV,gBAE9C,yBAAKe,UAAU,eACd,2BAAOE,QAAQ,WAAf,WACA,8BAAUb,GAAG,UAAUW,UAAU,uBAAuBI,SAAUT,KAAKV,gBAExE,yBAAKe,UAAU,eACd,4BAAQA,UAAU,gCAAlB,aAfiB,kBAAC,IAAD,CAAUD,GAAG,gBApBpC,GAAgCM,aAwDjBC,eAbS,SAACxB,GACxB,MAAM,CACLe,KAAMf,EAAMyB,SAASV,SAII,SAACW,GAC3B,MAAO,CACL8D,gBAAiB,SAACrC,GAAD,OAAYzB,ECxDN,SAACyB,GAC1B,OAAO,SAACzB,EAAUG,EAAX,GAAuD,EAAhCC,YAAiC,IACxDY,GAAYF,EAD2C,EAAnBA,gBAEpC0C,EAAUrD,IAAWJ,SAASyD,QAC9BS,EAAW9D,IAAWJ,SAASV,KAAKC,IAE1C0B,EACEG,WAAW,QACX+C,IAFF,2BAGKzC,GAHL,IAKEE,gBAAiB6B,EAAQ9C,UACzBkB,eAAgB4B,EAAQ7C,SACxBwD,SAAUF,EACVpC,UAAW,IAAIuC,QAEf9D,MAAK,WACLN,EAAS,CAAEL,KAAM,iBAAkB8B,eACjClB,OAAM,SAACC,GACGR,EAAS,CAAEL,KAAM,uBAAwBa,YDqChB6D,CAAW5C,QAKrC3B,CAA6C6D,GE3B5D,IAWeb,cAAQhD,aAXC,SAACxB,EAAOgG,GAC/B,IAAMzF,EAAKyF,EAASC,MAAMC,OAAO3F,GAC3BgE,EAAWvE,EAAM0C,UAAUyD,KAAKzB,KAGtC,MAAO,CACN0B,QAHe7B,EAAWA,EAAShE,GAAM,KAIzCQ,KAAMf,EAAMyB,SAASV,SAI0B4D,2BAAiB,CAAE,CAAE9B,WAAY,UAAnE2B,EAxCf,SAAqB7D,GAAQ,IACpByF,EAAkBzF,EAAlByF,QACR,OAD0BzF,EAATI,KACPC,IAENoF,EAEF,yBAAKlF,UAAU,qCACd,yBAAKA,UAAU,mBACd,yBAAKA,UAAU,iBACd,0BAAMA,UAAU,cAAckF,EAAQhD,OACtC,2BAAIgD,EAAQlC,UAEb,yBAAKhD,UAAU,wCACd,0CACYkF,EAAQ9C,eADpB,IACqC8C,EAAQ/C,iBAE7C,6BAAM+C,EAAQ7C,UAAUC,SAASC,mBAOpC,yBAAKvC,UAAU,oBACd,kDAtBmB,kBAAC,IAAD,CAAUD,GAAG,eCqBrBoF,E,uKAjBb,OACC,kBAAC,IAAD,KACC,yBAAKnF,UAAU,OACd,kBAAC,EAAD,MACA,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,IAAIC,UAAWlC,IACjC,kBAAC,IAAD,CAAOiC,KAAK,eAAeC,UAAWC,IACtC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWzG,IACjC,kBAAC,IAAD,CAAOwG,KAAK,UAAUC,UAAWrE,IACjC,kBAAC,IAAD,CAAOoE,KAAK,cAAcC,UAAWnB,W,GAXzB9D,aCGEmF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASZ,MACvB,2DClBN,IAAMa,EAAW,CACjBhG,UAAW,MAoCIiG,EAjCK,WAA4B,IAA3B/G,EAA0B,uDAApB8G,EAAWE,EAAS,uCAC3C,OAAOA,EAAO3F,MACV,IAAK,eACD,kCACOrB,GADP,IAEIc,UAAY,iBAEhB,IAAK,gBAEL,OAAO,2BACAd,GADP,IAEIc,UAAY,OAEhB,IAAK,kBAEL,OADIiE,QAAQC,IAAI,mBACThF,EACP,IAAK,iBAGD,OAFA+E,QAAQC,IAAI,kBAEL,2BACAhF,GADP,IAEIc,UAAY,OAEhB,IAAK,gBACL,OAAO,2BACAd,GADP,IAEIc,UAAYkG,EAAO9E,IAAI+E,UAE/B,QACA,OAAQjH,ICjCd8G,EAAY,CACjBI,SAAU,CACT,CAAE3G,GAAI,EAAG6C,MAAO,OAAQc,QAAS,iBACjC,CAAE3D,GAAI,EAAG6C,MAAO,cAAec,QAAS,iBACxC,CAAE3D,GAAI,EAAG6C,MAAO,eAAgBc,QAAS,mBAiB5BiD,EAbK,WAAgC,IAA/BnH,EAA8B,uDAAtB8G,EAAWE,EAAW,uCAClD,OAAOA,EAAO3F,MACb,IAAI,iBAEJ,OADA0D,QAAQC,IAAI,kBAAmBgC,EAAO7D,SAC/BnD,EACP,IAAI,uBAEJ,OADA+E,QAAQC,IAAI,kBAAmBgC,EAAOI,OAC/BpH,EACT,QACA,OAAOA,I,QCLaqH,EAPAC,YAAgB,CAChCvG,KAAMwG,EACN7C,KAAMyC,EACNzE,UAAW8E,mBACX/F,SAAWgG,oB,wCCObhG,IAASiG,cAXM,CACbC,OAAQ,0CACRC,WAAY,8CACZC,YAAa,qDACbC,UAAW,8BACXC,cAAe,0CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBzG,IAASiB,YACMjB,QAAf,ECLI0G,EAAQC,YACbf,EACA7C,YACC6D,YAAgBC,IAAMC,kBAAkB,CAAEzG,0BAAaU,+BACvDgG,yBAAe/G,IAAUgH,GACzBC,6BAAmBD,EAAU,CAACE,wBAAwB,EAAMC,YAAY,QAASC,mBAAoB,MAIvGV,EAAMW,oBAAoB9G,MAAK,WAAK+G,IAASC,OAC5C,kBAAC,IAAD,CAAUb,MAAOA,GAChB,kBAAC,EAAD,OAEDc,SAASC,eAAe,YLyGnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrH,MAAK,SAAAsH,GACJA,EAAaC,gBAEdtH,OAAM,SAAAmF,GACLrC,QAAQqC,MAAMA,EAAMH,c","file":"static/js/main.4e2b89a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\"\r\nimport {signIn} from \"../../store/action/authAction\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nexport class SignIn extends Component {\r\n\tstate = {\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value //we are gonna target using \"id\"\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t//console.log(this.state); //this.state keeps track of the \"state\"\r\n\t\tthis.props.signIn(this.state)\r\n\t};\r\n\trender() {\r\n\t\tconst {authError, auth} = this.props\r\n\t\t\t\tif(auth.uid) return <Redirect to=\"/\"/> // default dashboard redirect\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n<div className=\"red-text center\">\r\n\t\t{authError ? <p>{authError}</p> : null}\r\n\t</div>\t\t\t\r\n\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps=(state)=>{\r\n\treturn{\r\n\t\tauthError:state.auth.authError,\r\n\t\tauth: state.firebase.auth\r\n\t\t\r\n\t}\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\treturn{\r\n\t\tsignIn: (Credent) => dispatch(signIn(Credent))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\r\n","export const signIn = (credentials) => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst fire = getFirebase();\r\n\r\n\t\tfire\r\n\t\t\t.auth()\r\n\t\t\t.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'LOGIN_SUCESS' });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'LOGIN_FAILED', err }); //change \"FAILED to ERROR\"\r\n\t\t\t});\r\n\t};\r\n};\r\nexport const signOut = () => {\r\n\treturn (dispatch, getState, { getFirebase }) => {\r\n\t\tconst fire = getFirebase();\r\n\t\tfire.auth().signOut().then(() => {\r\n\t\t\tdispatch({ type: 'SIGNOUT_SUCCESS' });\r\n\t\t});\r\n\t};\r\n};\r\nexport const signUp = (newUser) => {\r\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\t\tconst fire = getFirebase();\r\n\t\tconst firestore = getFirestore();\r\n\t\tfire\r\n\t\t\t.auth()\r\n\t\t\t.createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n\t\t\t.then((response) => {\r\n\t\t\t\treturn firestore\r\n\t\t\t\t\t.collection('users')\r\n\t\t\t\t\t.doc(response.user.uid)\r\n\t\t\t\t\t.set({\r\n\t\t\t\t\t\tfirstName: newUser.firstName,\r\n\t\t\t\t\t\tlastName: newUser.lastName,\r\n\t\t\t\t\t\tinitials: newUser.firstName[0] + newUser.lastName[0]\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'SIGNUP_SUCCESS' });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'SIGNUP_FAILED', err });\r\n\t\t\t});\r\n\t};\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/action/authAction';\r\n\r\nexport class SignUp extends Component {\r\n\tstate = {\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value //we are gonna target using \"id\"\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.signUp(this.state);\r\n\t\t//console.log(this.state); //this.state keeps track of the \"state\"\r\n\t};\r\n\trender() {\r\n\t\tconst { auth, authError } = this.props;\r\n\t\tif (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"firstName\">First Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"lastName\">Last Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n\t\t\t\t\t\t<div className=\"red-text center\">{authError ? <p> {authError}</p> : null}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth, //console.log(state) to get auth\r\n\t\tauthError: state.auth.authError //auth is from the rootreducer\r\n\t};\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignUp: (newUser) => dispatch(signUp(newUser)) //this method is  from authAction.js\r\n\t};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React from 'react';\r\nfunction ProjSummary({project}) {\r\n\treturn (\r\n\t\t<div className=\"card z-depth-0 project-summary\">\r\n\t\t\t<div className=\"card-content grey-text text-darken-3\">\r\n\t\t\t\t<span className=\"card-title\">{project.title}</span>\r\n\t<p>Posted by  {project.authorFirstName} {project.authorLastName}</p>\r\n\t\t\t\t<p className=\"grey-text\">{project.createdAt.toDate().toDateString()}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ProjSummary;\r\n","//its functional component, any data that is being injected to this component will becalled from the dashboard as a \"prop\"\r\nimport React from 'react';\r\nimport ProjSummary from './ProjSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Projlist({ projRedData }) {\r\n\treturn (\r\n\t\t<div className=\"project-list section\">\r\n\t\t\t{projRedData &&\r\n\t\t\t\tprojRedData.map((projecty) => {\r\n\t\t\t\t\treturn <Link to={\"/Project/\"+ projecty.id} key={projecty.id}>\r\n\t\t\t\t\t<ProjSummary project={projecty}  />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Projlist;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nfunction Notifications(props) {\r\n\tconst { notifications } = props;\r\n\treturn (\r\n\t\t<div className=\"section\">\r\n\t\t\t<div className=\"card z-depth-0\">\r\n\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t<span className=\"card-title\">Notifications</span>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{notifications &&\r\n\t\t\t\t\t\t\tnotifications.map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"pink-text\">{item.user} </span>\r\n\t\t\t\t\t\t\t\t\t\t<span>{item.content}</span>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"grey-text note-date\">\r\n\t\t\t\t\t\t\t\t\t\t\t{moment(item.time.toDate()).fromNow()}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Notifications;\r\n","// Might use state or lifecycle hooks\r\nimport React, { Component } from 'react'\r\nimport Projlist from '../Projects/Projlist'\r\nimport Notifications from './Notifications'\r\nimport {connect} from \"react-redux\"\r\nimport {firestoreConnect} from \"react-redux-firebase\"\r\nimport {compose } from 'redux';\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nexport class Dashboard extends Component {\r\n    render() {\r\n       // console.log(this.props)\r\n\r\nconst {projects, auth, notifications} = this.props //destructuring of props\r\nif(!auth.uid) return <Redirect to=\"/signin\"/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <Projlist projRedData={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications  notifications= {notifications}/>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n                \r\n            \r\n        )\r\n    }\r\n}\r\n    const mapStateToProp =(state)=>{\r\n        //console.log(state)\r\n        return{\r\n        projects: state.firestore.ordered.proj,//getting the state of projReducers \"elements\" stored in rootreducer as \"proj\"\r\n           auth: state.firebase.auth, // we can get the authemtication status/ (uid) through this from Navbar.js\r\n            notifications: state.firestore.ordered.notifications // this is a array of ordered notifications which we attach to the props\r\n        }\r\n}\r\n\r\nexport default compose(connect(mapStateToProp),\r\nfirestoreConnect([\r\n    {collection: \"proj\", orderBy: ['createdAt', 'desc']},\r\n    {collection: \"notifications\", limit: 3, orderBy: ['time', 'desc']} // limit- show only certain amt of notification\r\n]))(Dashboard)\r\n","//since this component has no states it uses funnction component\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/action/authAction';\r\nfunction SignedIn(props) {\r\n\tconsole.log(props)\r\n\treturn (\r\n\t\t<ul className=\"right\" /*floats everything to right */>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/createproj\">New Project</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a onClick={props.signOut}>Log Out</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n\t\t\t\t{props.profile.initials}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignOut: () => dispatch(signOut())\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedIn);\r\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\"\r\nfunction SignedOut() {\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n           \r\n            </ul>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOut\r\n","//since this component has no states\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedIn from './SignedIn';\r\nimport SignedOut from './SignedOut';\r\nimport {connect} from \"react-redux\"\r\n\r\nfunction NavBar(props) {\r\n\tconst {auth, profile} = props\r\n\t//console.log(auth)\r\n\tconst links = auth.uid ?  <SignedIn profile={profile}/> :\t<SignedOut/>\r\n\treturn (\r\n\t\t<nav className=\"nav-wrapper grey darken-3\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\" className=\"brand-logo left\">Home</Link>\r\n\t\t\t\t\t\r\n\t\t\t     {links}\r\n\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\nconst mapStateToProps =(state)=>{\r\n\t//console.log(state)\r\n\treturn{\r\n\t\tauth: state.firebase.auth,\r\n\t\tprofile: state.firebase.profile // we get this if we console.log(state), under firebase->profile\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { Component } from 'react';\r\nimport{connect} from \"react-redux\"\r\nimport{createProj} from  \"../../store/action/projAction\"\r\nimport {Redirect} from \"react-router-dom\"\r\n\r\nexport class CreateProj extends Component {\r\n\tstate = {\r\n\t\tTitle: '',\r\n\t\tContent: ''\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value //we are gonna target using \"id\"\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t//console.log(this.state); //this.state keeps track of the \"state\"\r\n\t\tthis.props.creatingProject(this.state)\r\n\t\tthis.props.history.push(\"/\")\r\n\t};\r\n\trender() {\r\n\t\tconst {auth} = this.props\r\n\t\tif(!auth.uid) return <Redirect to=\"/signin\"/>\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"Content\">Content</label>\r\n\t\t\t\t\t\t<textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n\treturn{\r\n\t\tauth: state.firebase.auth\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\treturn {\r\n\t\t creatingProject: (project) =>dispatch(createProj(project))\r\n\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProj);\r\n","export const createProj = (project) => {\r\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\r\n\t\tconst firestore = getFirestore();\r\n\t\tconst profile = getState().firebase.profile //gets the profile object from the state\r\n\t\tconst authorId = getState().firebase.auth.uid // gives the author id\r\n\t\t\r\n\t\tfirestore\r\n\t\t\t.collection('proj')\r\n\t\t\t.add({\r\n\t\t\t\t...project,\r\n\r\n\t\t\t\tauthorFirstName: profile.firstName,\r\n\t\t\t\tauthorLastName: profile.lastName,\r\n\t\t\t\tauthorID: authorId,\r\n\t\t\t\tcreatedAt: new Date()\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'CREATE_PROJECT', project });\r\n\t\t\t}).catch((err)=>{\r\n                dispatch({ type: 'CREATE_PROJECT_ERROR', err })\r\n            })\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nfunction ProjDetails(props) {\r\n\tconst { Project, auth } = props; //destructured from mapStateToProps \"Project\"\r\n\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n\tif (Project) {\r\n\t\treturn (\r\n\t\t\t<div className=\"container section project-details\">\r\n\t\t\t\t<div className=\"card z-depth-0 \">\r\n\t\t\t\t\t<div className=\"card-content \">\r\n\t\t\t\t\t\t<span className=\"card-title\">{Project.title}</span>\r\n\t\t\t\t\t\t<p>{Project.content}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-action grey lighten-4 grey-text\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tPosted by {Project.authorLastName} {Project.authorFirstName}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>{Project.createdAt.toDate().toDateString()}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"container center\">\r\n\t\t\t\t<p>Loading Project...</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst id = ownProps.match.params.id;\r\n\tconst projects = state.firestore.data.proj;\r\n\tconst Project = projects ? projects[id] : null;\r\n\r\n\treturn {\r\n\t\tProject: Project,\r\n\t\tauth: state.firebase.auth\r\n\t};\r\n};\r\n\r\nexport default compose(connect(mapStateToProps), firestoreConnect([ { collection: 'proj' } ]))(ProjDetails);\r\n","import React from 'react';\nimport { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SignIn from './components/Auth/SignIn';\nimport SignUp from './components/Auth/SignUp';\nimport Dashboard from './components/Dash/Dashboard';\nimport NavBar from './components/Layouts/Navbar';\nimport CreateProj from './components/Projects/Createproj';\nimport ProjDetails from './components/Projects/ProjDetails';\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<NavBar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Dashboard} />\n\t\t\t\t\t\t<Route path=\"/Project/:id\" component={ProjDetails} />\n\t\t\t\t\t\t<Route path=\"/signin\" component={SignIn} />\n\t\t\t\t\t\t<Route path=\"/signup\" component={SignUp} />\n\t\t\t\t\t\t<Route path=\"/createproj\" component={CreateProj} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState ={\r\nauthError: null\r\n}\r\n\r\nconst authReducers =(state=initState, action)=>{\r\n    switch(action.type){\r\n        case \"LOGIN_FAILED\":\r\n            return{\r\n                ...state,\r\n                authError : \"Login failed\"\r\n            }\r\n            case \"LOGIN_SUCCESS\":\r\n                \r\n            return {\r\n                ...state,\r\n                authError : null\r\n            }\r\n            case \"SIGNOUT_SUCCESS\":\r\n                console.log(\"signOut success\")\r\n            return state\r\n            case \"SIGNUP_SUCCESS\":\r\n                console.log(\"signUp success\")\r\n\r\n                return {\r\n                    ...state,\r\n                    authError : null\r\n                }\r\n                case \"SIGNUP_FAILED\":\r\n                return {\r\n                    ...state,\r\n                    authError : action.err.message\r\n                }\r\n            default: \r\n            return  state;\r\n    }\r\n\r\n}\r\nexport default authReducers","const initState = {\r\n\telements: [\r\n\t\t{ id: 1, title: 'fish', content: 'blue beh blah' },\r\n\t\t{ id: 2, title: 'fisnappingh', content: 'blue beh blah' },\r\n\t\t{ id: 3, title: 'bootknitting', content: 'blue beh blah' }\r\n\t]\r\n};\r\n\r\nconst projReducer = (state = initState, action) => {\r\n\tswitch(action.type){\r\n\t\tcase\"CREATE_PROJECT\" :\r\n\t\tconsole.log(\"created project\", action.project)\r\n\t\treturn state\r\n\t\tcase\"CREATE_PROJECT_ERROR\" :\r\n\t\tconsole.log(\"created project\", action.error)\r\n\t\treturn state\r\ndefault:\r\nreturn state;\r\n\r\n\t}\r\n};\r\nexport default projReducer;\r\n","import{combineReducers} from \"redux\"\r\nimport authReducer from \"./authReducer\"\r\nimport projReducer from \"./projReducer\"\r\nimport {firestoreReducer} from \"redux-firestore\"\r\nimport {firebaseReducer} from \"react-redux-firebase\"\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    proj: projReducer,\r\n    firestore: firestoreReducer,\r\n    firebase : firebaseReducer // sinks our authnetication status on firebase with redux app in the state and pop it on the firebase object.\r\n\r\n})\r\n    export default  rootReducer","import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n // Your web app's Firebase configuration\r\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n  var fbConfig = {\r\n    apiKey: \"AIzaSyAn9mLLfIl3hLuJX7SL2ja_JkO_9UYMHmQ\",\r\n    authDomain: \"project-authentication-1995.firebaseapp.com\",\r\n    databaseURL: \"https://project-authentication-1995.firebaseio.com\",\r\n    projectId: \"project-authentication-1995\",\r\n    storageBucket: \"project-authentication-1995.appspot.com\",\r\n    messagingSenderId: \"617077217882\",\r\n    appId: \"1:617077217882:web:13eeed51683ef069b7d663\",\r\n    measurementId: \"G-517D3SG6D9\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(fbConfig);\r\n  firebase.firestore()\r\n  export default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './store/reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\r\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\r\nimport fbConfig from './config/fbConfig';\r\nimport firebase from 'firebase/app';\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcompose(\r\n\t\tapplyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n\t\treduxFirestore(firebase, fbConfig),\r\n\t\treactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile:\"users\", attachAuthIsReady : true})\r\n\t)\r\n);\r\n\r\nstore.firebaseAuthIsReady.then(()=>{ReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n})\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}